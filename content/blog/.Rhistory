gapminder <- gapminder_orig
# apply the class() function to each column
gapminder %>% map_chr(~class(.x))
# apply the class() function to each column
gapminder %>% map_chr(class)
# apply the n_distinct() function to each column
gapminder %>% map_dbl(n_distinct)
gapminder %>% map_df(~(data.frame(n_distinct = n_distinct(.x),
class = class(.x))))
gapminder %>% map_df(~(data.frame(n_distinct = n_distinct(.x),
class = class(.x))),
.id = "variable")
.x <- gapminder[[1]]
.x
data.frame(n_distinct = n_distinct(.x),
class = class(.x))
# try to figure out the code for the first example
.x <- continents[1]
.y <- years[1]
# extract the continent and year pairs as separate vectors
continents <- continent_year %>% pull(continent) %>% as.character
years <- continent_year %>% pull(year)
continent_year <- gapminder %>% distinct(continent, year)
continent_year
# extract the continent and year pairs as separate vectors
continents <- continent_year %>% pull(continent) %>% as.character
years <- continent_year %>% pull(year)
# try to figure out the code for the first example
.x <- continents[1]
.y <- years[1]
.x
.y
gapminder %>% filter(continent == .x,
year == .y) %>%
ggplot() +
geom_point(aes(x = gdpPercap, y = lifeExp)) +
ggtitle(glue::glue(.x, " ", .y))
plot_list <- map2(.x = continents,
.y = years,
.f = ~{
gapminder %>%
filter(continent == .x,
year == .y) %>%
ggplot() +
geom_point(aes(x = gdpPercap, y = lifeExp)) +
ggtitle(glue::glue(.x, " ", .y))
})
plot_list[[1]]
plot_list[[22]]
my_first_list <- list(my_number = 5,
my_vector = c("a", "b", "c"),
my_dataframe = data.frame(a = 1:3, b = c("q", "b", "z"), c = NA))
my_first_list
my_first_list <- list(my_number = 5,
my_vector = c("a", "b", "c"),
my_dataframe = data.frame(a = 1:3, b = c("q", "b", "z"), c = c("bananas", "are", "great")))
my_first_list
my_first_list <- list(my_number = 5,
my_vector = c("a", "b", "c"),
my_dataframe = data.frame(a = 1:3, b = c("q", "b", "z"), c = c("bananas", "are", "so very great")))
my_first_list
gapminder_nested <- gapminder %>%
group_by(continent) %>%
nest()
gapminder_nested
gapminder_nested <- gapminder %>%
group_by(continent) %>%
nest()
gapminder_nested
gapminder_nested$data[[1]]
gapminder_nested$data[[5]]
gapminder_nested$data[[5]]
data.frame(x = 1:10) %>%
mutate(sum(x))
tibble(x = 1:10) %>%
mutate(sum(x))
tibble(x = list(1:10)) %>%
mutate(sum(x))
tibble(vec_col = 1:10) %>%
mutate(x_sum = sum(vec_col))
tibble(list_col = list(1:10)) %>%
mutate(sum = sum(list_col))
tibble(list_col = list(1:10))
tibble(list_col = as.list(1:10))
tibble(list_col = as.list(1:10)) %>%
mutate(sum = sum(list_col))
tibble(list_col = as.list(1:10))
tibble(list_col = as.list(1:10)) %>%
mutate(sum = map(list_col, sum))
tibble(vec_col = 1:10) %>%
mutate(sum = sum(vec_col))
tibble(list_col = list(c(1, 5, 7), 5, c(10, 10, 11)))
tibble(list_col = list(c(1, 5, 7), 5, c(10, 10, 11))) %>%
mutate(sum = sum(list_col))
tibble(list_col = list(c(1, 5, 7), 5, c(10, 10, 11)))
list(c(1, 5, 7), 5, c(10, 10, 11))
tibble(list_col = list(c(1, 5, 7), 5, c(10, 10, 11))) %>%
mutate(sum = sum(list_col))
tibble(list_col = list(c(1, 5, 7), 5, c(10, 10, 11))) %>%
mutate(sum = map(list_col, sum))
list_col_tibble <- tibble(list_col = list(c(1, 5, 7), 5, c(10, 10, 11)))
list_col_tibble
list_col_tibble %>%
mutate(sum = sum(list_col))
list_col_tibble %>%
mutate(sum = map(list_col, sum))
list_col_tibble %>%
mutate(sum = map(list_col, sum)) %>%
pluck(sum)
list_col_tibble %>%
mutate(sum = map(list_col, sum)) %>%
pluck(sum)
list_col_tibble %>%
mutate(sum = map(list_col, sum)) %>%
pull(sum)
list_col_tibble %>%
mutate(sum = map_dbl(list_col, sum))
gapminder_nested %>%
mutate(avg_lifeExp = mean(data$lifeExp))
.x <- gapminder_nested %>% pull(data) %>% pluck(1)
.x
mean(.x$lifeExp)
gapminder_nested %>%
mutate(avg_lifeExp = map_dbl(data, ~{mean(.x$lifeExp)}))
# fit a model separately for each continent
gapminder_nested <- gapminder_nested %>%
mutate(lm_obj = map(data, ~lm(lifeExp ~ pop + gdpPercap + year, data = .)))
gapminder_nested
.x <- gapminder_nested %>% pull(data) %>% pluck(1)
# fit a model separately for each continent
gapminder_nested <- gapminder_nested %>%
mutate(lm_obj = map(data, ~lm(lifeExp ~ pop + gdpPercap + year, data = .x)))
gapminder_nested
gapminder_nested$lm_obj[[1]]
gapminder[[1]]
.x <- gapminder %>% pluck(1)
.x
gapminder_nested %>%
# extract the data column
pull(data) %>%
# extract the first entry
pluck(1)
gapminder_nested %>% pull(data) %>% pluck(5)
gapminder_nested %>% pull(lm_obj) %>% pluck(1)
# fit a model separately for each continent
gapminder_nested <- gapminder_nested %>%
mutate(pred = map2(lm_obj, data, function(.lm, .data) predict(.lm, .data)))
gapminder_nested
# fit a model separately for each continent
gapminder_nested <- gapminder_nested %>%
mutate(cor = map2_dbl(pred, data, function(.pred, .data) cor(.pred, .data$lifeExp)))
gapminder_nested
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
gapminder %>%
group_by(continent) %>%
nest() %>%
mutate(lm_obj = map(data, ~lm(lifeExp ~ pop + year + gdpPercap, data = .))) %>%
mutate(lm_tidy = map(lm_obj, broom::tidy)) %>%
transmute(continent, lm_tidy) %>%
unnest()
blogdown::serve_site()
blogdown::serve_site()
list_col_tibble %>%
mutate(sum = map(list_col, sum))
blogdown::serve_site()
gapminder %>% map_df(scale)
gapminder %>% modify_if(is.numeric, scale)
gapminder %>% map_df(scale)
blogdown::serve_site()
my_first_list
my_first_list %>% modify(length)
blogdown::stop_server()
?modify
modify(.x = c(1, 4, 7),
.f = addTen)
modify(.x = list(1, 4, 7),
.f = addTen)
modify(.x = data.frame(1, 4, 7),
.f = addTen)
modify(.x = c(1, 4, 7),
.f = addTen)
modify(.x = list(1, 4, 7),
.f = addTen)
modify(.x = data.frame(1, 4, 7),
.f = addTen)
modify_if(~{.x > 5},
.x = data.frame(1, 4, 7),
.f = addTen)
modify_if(functin(x) x > 5,
.x = data.frame(1, 4, 7),
.f = addTen)
modify_if(function(x) x > 5,
.x = data.frame(1, 4, 7),
.f = addTen)
modify(.x = data.frame(1, 4, 7),
.f = addTen)
modify_if(function(x) x > 5,
.x = list(1, 4, 7),
.f = addTen)
modify_if(.p = function(x) x > 5,
.x = list(1, 4, 7),
.f = addTen)
imap_df(c(1, 4, 7), function(.x) {
return(data.frame(old_number = .x,
new_number = addTen(.x)))
})
imap(.x = data.frame(1, 4, 7),
.f = addTen)
?ipmap
?imap
imap(.x = data.frame(1, 4, 7),
.f = addTen)
map(.x = data.frame(1, 4, 7),
.f = addTen)
imap_chr(sample(10), ~ paste0(.y, ": ", .x))
gapminder %>% pluck(continent, year)
gapminder %>% pluck("continent", "year")
?pluck
gapminder %>% pluck( {{ continent }}, {{ year}})
gapminder %>% pluck(1)
gapminder %>% as.list
gapminder %>% as.list %>% pluck("year", "continent")
gapminder %>% as.list %>% pluck(c("year", "continent"))
gapminder %>% as.list %>% pluck("year")
gapminder %>% pluck("year")
gapminder %>% chuck("year")
gapminder %>% chuck(c("year", "country")
)
gapminder %>% chuck("year", "country")
gapminder %>% pluck(1, 1)
gapminder_nested %>% pluck("data", 5)
list_col_tibble %>%
mutate(sum = map(list_col, sum)) %>%
pluck(sum)
.x <- gapminder_nested %>% pluck(data, 1)
.x <- gapminder_nested %>% pluck("data", 1)
.x
gapminder_nested %>% pluck("lm_obj", 1)
gapminder_list <- gapminder %>% split(gapminder$continent)
gapminder_list <- gapminder %>% split(gapminder$continent)
gapminder_list
gapminder_list <- gapminder %>% split(gapminder$continent) %>%
map_df(~sample_n(., 10))
gapminder_list
gapminder_list <- gapminder %>% split(gapminder$continent) %>%
map(~sample_n(., 10))
gapminder_list
gapminder_list <- gapminder %>% split(gapminder$continent) %>%
map(~sample_n(., 5))
gapminder_list
gapminder_list %>%
keep(~{mean(.x$lifeExp) > 70})
gapminder_list %>%
keep("Oceania")
?keep
?do.call
?reduce
gapminder_list %>%
reduce(rbind)
1:10 %>% reduce
1:10 %>% reduce(sum)
reduce(c(1, 2, 3), sum)
accumulate(c(1, 2, 3), sum)
gapminder_list %>% every(~{mean(.x$life) > 70})
gapminder_list %>% some(~{mean(.x$life) > 70})
has_element(c(1, 2, 3), 2)
has_element(list(c(1, 2, 3), 9.9), 9.9)
?summarise
gapminder_list <- gapminder %>% split(gapminder$continent) %>%
map(~sample_n(., 5))
gapminder_list
??row_bind
gapminder_list %>%
reduce(rbind)
contains(c(1, 2, 3), 2)
list(1, c(2, 5, 1), "a") %>% has_element("a")
blogdown::serve_site()
stop_server()
blogdown::stop_server()
blogdown::serve_site()
map(.x = c(1, 4, 7),
.f = addTen)
map_dbl(c(1, 4, 7), addTen)
library(tidyverse)
modify(.x = c(1, 4, 7),
.f = addTen)
gapminder %>% map_df(~(data.frame(n_distinct = n_distinct(.x),
class = class(.x))))
continent_year <- gapminder %>% distinct(continent, year)
continent_year
# extract the continent and year pairs as separate vectors
continents <- continent_year %>% pull(continent) %>% as.character
years <- continent_year %>% pull(year)
.x <- gapminder %>% pluck(1)
.x
.x <- gapminder %>% pluck(1)
.x
head(.x)
gapminder_nested %>% pluck(data, 1)
gapminder_nested %>% pluck("data", 1)
tibble(list_col = list(c(1, 5, 7),
5,
c(10, 10, 11))) %>%
mutate(sum = sum(list_col))
blogdown::stop_server()
# the first entry of the "data" column
.x <- gapminder_nested %>% pluck("data", 1)
.x
mean(.x$lifeExp)
# fit a model separately for each continent
gapminder_nested <- gapminder_nested %>%
mutate(pred = map2(lm_obj, data, function(.lm, .data) predict(.lm, .data)))
gapminder_nested
# Chunk 1
knitr::include_graphics("/img/purrr/cat_map.jpg")
# Chunk 2
my_first_list <- list(my_number = 5,
my_vector = c("a", "b", "c"),
my_dataframe = data.frame(a = 1:3, b = c("q", "b", "z"), c = c("bananas", "are", "so very great")))
my_first_list
# Chunk 3
addTen <- function(.x) {
return(.x + 10)
}
# Chunk 4
library(tidyverse)
map(.x = c(1, 4, 7),
.f = addTen)
# Chunk 5
map(c(1, 4, 7), addTen)
# Chunk 6
map(list(1, 4, 7), addTen)
# Chunk 7
map(data.frame(1, 4, 7), addTen)
# Chunk 8
map_dbl(c(1, 4, 7), addTen)
# Chunk 9
map_chr(c(1, 4, 7), addTen)
# Chunk 10
map_df(c(1, 4, 7), function(.x) {
return(data.frame(old_number = .x,
new_number = addTen(.x)))
})
# Chunk 11
library(tidyverse)
modify(c(1, 4, 7), addTen)
# Chunk 12
modify(list(1, 4, 7), addTen)
# Chunk 13
modify(data.frame(1, 4, 7), addTen)
# Chunk 14
modify_if(.x = list(1, 4, 7),
.p = function(x) x > 5,
.f = addTen)
# Chunk 17
map_dbl(c(1, 4, 7), ~{. + 10})
# Chunk 18
map_dbl(c(1, 4, 7), ~{.x + 10})
# Chunk 19
# to download the data directly:
gapminder_orig <- read.csv("https://raw.githubusercontent.com/swcarpentry/r-novice-gapminder/gh-pages/_episodes_rmd/data/gapminder-FiveYearData.csv")
# define a copy of the original dataset that we will clean and play with
gapminder <- gapminder_orig
# Chunk 20
dim(gapminder)
head(gapminder)
# Chunk 21
# apply the class() function to each column
gapminder %>% map_chr(class)
# Chunk 22
# apply the n_distinct() function to each column
gapminder %>% map_dbl(n_distinct)
# Chunk 23
gapminder %>% map_df(~(data.frame(n_distinct = n_distinct(.x),
class = class(.x))))
# Chunk 24
gapminder %>% map_df(~(data.frame(n_distinct = n_distinct(.x),
class = class(.x))),
.id = "variable")
# Chunk 25
.x <- gapminder %>% pluck(1)
head(.x)
# Chunk 26
data.frame(n_distinct = n_distinct(.x),
class = class(.x))
# Chunk 27
gapminder %>% map_df(~(data.frame(n_distinct = n_distinct(.x),
class = class(.x))),
.id = "variable")
# Chunk 29
continent_year <- gapminder %>% distinct(continent, year)
continent_year
# Chunk 30
# extract the continent and year pairs as separate vectors
continents <- continent_year %>% pull(continent) %>% as.character
years <- continent_year %>% pull(year)
# Chunk 31
# try to figure out the code for the first example
.x <- continents[1]
.y <- years[1]
# make a scatterplot of GDP vs life expectancy in all Asian countries for 1952
gapminder %>%
filter(continent == .x,
year == .y) %>%
ggplot() +
geom_point(aes(x = gdpPercap, y = lifeExp)) +
ggtitle(glue::glue(.x, " ", .y))
# Chunk 32
plot_list <- map2(.x = continents,
.y = years,
.f = ~{
gapminder %>%
filter(continent == .x,
year == .y) %>%
ggplot() +
geom_point(aes(x = gdpPercap, y = lifeExp)) +
ggtitle(glue::glue(.x, " ", .y))
})
# Chunk 33
plot_list[[1]]
plot_list[[22]]
# Chunk 34
gapminder_nested <- gapminder %>%
group_by(continent) %>%
nest()
gapminder_nested
# Chunk 35
gapminder_nested$data[[1]]
# Chunk 36
gapminder_nested %>%
# extract the first entry from the data column
pluck("data", 1)
# Chunk 37
gapminder_nested %>% pluck("data", 5)
# Chunk 38
tibble(vec_col = 1:10) %>%
mutate(vec_sum = sum(vec_col))
# Chunk 40
list_col_tibble %>%
mutate(list_sum = map(list_col, sum))
# Chunk 41
list_col_tibble %>%
mutate(list_sum = map(list_col, sum)) %>%
pull(list_sum)
# Chunk 42
list_col_tibble %>%
mutate(list_sum = map_dbl(list_col, sum))
# Chunk 43
gapminder_nested %>%
mutate(avg_lifeExp = mean(data$lifeExp))
# Chunk 44
# the first entry of the "data" column
.x <- gapminder_nested %>% pluck("data", 1)
.x
# Chunk 45
mean(.x$lifeExp)
# Chunk 46
gapminder_nested %>%
mutate(avg_lifeExp = map_dbl(data, ~{mean(.x$lifeExp)}))
# Chunk 47
# fit a model separately for each continent
gapminder_nested <- gapminder_nested %>%
mutate(lm_obj = map(data, ~lm(lifeExp ~ pop + gdpPercap + year, data = .x)))
gapminder_nested
# Chunk 48
gapminder_nested %>% pluck("lm_obj", 1)
# fit a model separately for each continent
gapminder_nested <- gapminder_nested %>%
mutate(pred = map2(lm_obj, data, function(.lm, .data) predict(.lm, .data)))
gapminder_nested
# fit a model separately for each continent
gapminder_nested <- gapminder_nested %>%
mutate(cor = map2_dbl(pred, data, function(.pred, .data) cor(.pred, .data$lifeExp)))
gapminder_nested
gapminder %>%
group_by(continent) %>%
nest() %>%
mutate(lm_obj = map(data, ~lm(lifeExp ~ pop + year + gdpPercap, data = .))) %>%
mutate(lm_tidy = map(lm_obj, broom::tidy)) %>%
transmute(continent, lm_tidy) %>%
unnest()
gapminder_list <- gapminder %>% split(gapminder$continent) %>%
map(~sample_n(., 5))
gapminder_list <- gapminder %>% split(gapminder$continent) %>%
map(~sample_n(., 5))
plit(gapminder$continent) %>%
map(~sample_n(., 5))
gapminder_list
gapminder_list %>%
keep(~{mean(.x$lifeExp) > 70})
set.seed(23489)
gapminder_list <- gapminder %>% split(gapminder$continent) %>%
map(~sample_n(., 5))
gapminder_list
gapminder_list %>%
keep(~{mean(.x$lifeExp) > 70})
gapminder_list %>%
reduce(rbind)
gapminder_list %>% every(~{mean(.x$life) > 70})
gapminder_list %>% some(~{mean(.x$life) > 70})
list(1, c(2, 5, 1), "a") %>% has_element("a")
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
