<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Purrr on Rebecca Barter</title>
    <link>/categories/purrr/</link>
    <description>Recent content in Purrr on Rebecca Barter</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 05 Aug 2019 23:13:14 -0500</lastBuildDate>
    
	<atom:link href="/categories/purrr/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Learn to purrr</title>
      <link>/blog/2019-08-06_purrr/</link>
      <pubDate>Mon, 05 Aug 2019 23:13:14 -0500</pubDate>
      
      <guid>/blog/2019-08-06_purrr/</guid>
      <description>When I started writing this blog post I thought of purrr both as a tidy tool for applying map functions and as the package with the cutest name ever.
To start with, here is a picture of a cat reading a map. Perhaps this cat is relevant to this post. Perhaps it is not.
If you’re not sure about how cats and maps are related, think briefly on the Harry Potter quote:</description>
    </item>
    
    <item>
      <title>Transitioning into the tidyverse (part 2)</title>
      <link>/blog/2019-08-05_base_r_to_tidyverse_pt2/</link>
      <pubDate>Mon, 05 Aug 2019 23:13:14 -0500</pubDate>
      
      <guid>/blog/2019-08-05_base_r_to_tidyverse_pt2/</guid>
      <description>Data shaping: tidyr Gathering and spreading Combining and separating variables  Replacing loops: purrr Loading data: readr Storing data: tibbles Dates, factors and strings: lubridate, forcats and stringr Handling dates and times: lubridate Handling factors: forcats Handling strings: stringr    If you’re new to the tidyverse, I recommend that you first read part one of this two-part series on transitioning into the tidyverse. Part 1 focuses on what I feel are the most important aspects and packages of the tidyverse: tidy thinking, piping, dplyr and ggplot2.</description>
    </item>
    
  </channel>
</rss>