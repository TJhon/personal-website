<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Visualization on Rebecca Barter</title>
    <link>/categories/visualization/</link>
    <description>Recent content in Visualization on Rebecca Barter</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 21 Jan 2019 23:13:14 -0500</lastBuildDate>
    
	<atom:link href="/categories/visualization/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Visualizing world happiness</title>
      <link>/blog/2019-01-21_world_happiness/</link>
      <pubDate>Mon, 21 Jan 2019 23:13:14 -0500</pubDate>
      
      <guid>/blog/2019-01-21_world_happiness/</guid>
      <description>Over the new year I decided to work on my D3.js skills (rather than do the actual work that I probably should’ve done) by submitting an entry to the World Data Visualization competition.
The interactive version of the fruits of my labour can be found by clicking here. Below is a static screenshot.

Essentially, the first screen shows each country’s happiness score (and are colored accordingly using the viridis color palette).</description>
    </item>
    
    <item>
      <title>Cycling the Burke Gilman Trail in Seattle</title>
      <link>/blog/2018-06-20_bourke_gilman_trail/</link>
      <pubDate>Wed, 20 Jun 2018 23:13:14 -0500</pubDate>
      
      <guid>/blog/2018-06-20_bourke_gilman_trail/</guid>
      <description>While living in Seattle, I rode to and from Fremont every day on the Burke Gilman bike trail. Little did I know that everytime I went past NE 70th St, I (along with everyone else) was being recorded… It turns out that hourly data of traffic on the Burke Gilman trail is publicly available online. I decided to try out my D3 skills and make a cute little visualization of an average day in the life of the Burke Gilman trail.</description>
    </item>
    
    <item>
      <title>Getting fancy with ggplot2: code for alternatives to grouped bar charts</title>
      <link>/blog/2018-05-29_getting_fancy_ggplot2/</link>
      <pubDate>Tue, 29 May 2018 23:13:14 -0500</pubDate>
      
      <guid>/blog/2018-05-29_getting_fancy_ggplot2/</guid>
      <description>Here I provide the code I used to create the figures from my previous post on alternatives to grouped bar charts. You are encouraged to play with them yourself!
The key to creating unique and creative visualizations using libraries such as ggplot (or even just straight SVG) is (1) to move away from thinking of data visualization only as the default plot types (bar plots, boxplots, scatterplots, etc), and (2) to realise that most visualizations are essentially lines and circles that you can arrange however you desire in space.</description>
    </item>
    
    <item>
      <title>Alternatives to grouped bar charts</title>
      <link>/blog/2018-05-29_alternatives_dodged_bars/</link>
      <pubDate>Tue, 29 May 2018 21:13:14 -0500</pubDate>
      
      <guid>/blog/2018-05-29_alternatives_dodged_bars/</guid>
      <description>At some point in your life you have probably found yourself standing face-to-face with a beast known as a grouped bar chart. Perhaps it was in a research paper where the authors were trying to compare the results of several models across different datasets, or it was in a talk given by a colleague who was trying to compare the popularity of different products among distinct groups of consumers.
The first time you encountered a grouped bar chart you might have thought “what a neat way to put so much information in a single plot!</description>
    </item>
    
    <item>
      <title>Coolors: choosing color schemes</title>
      <link>/blog/2017-06-27-colors/</link>
      <pubDate>Tue, 27 Jun 2017 21:13:14 -0500</pubDate>
      
      <guid>/blog/2017-06-27-colors/</guid>
      <description>Choosing a color palette for a visualization can be one of the most time consuming parts for perfectionists like me. It can be surprisingly difficult to decide on a palette that is both visually appealing and practical, but fortunately there do exist websites to help!
For example, Coolors shoots random, appealing, color palettes at you and you can swipe from one to the next with a hit of a space-bar.</description>
    </item>
    
    <item>
      <title>Interactive visualization in R</title>
      <link>/blog/2017-04-20-interactive/</link>
      <pubDate>Thu, 20 Apr 2017 21:13:14 -0500</pubDate>
      
      <guid>/blog/2017-04-20-interactive/</guid>
      <description>Last week I gave an SGSA seminar on interactive visualizations in R.
Here is a long-form version of the talk.
Why be interactive? Interactivity allows the viewer to engage with your data in ways impossible by static graphs. With an interactive plot, the viewer can zoom into the areas the care about, highlight the data points that are relevant to them and hide the information that isn’t.</description>
    </item>
    
  </channel>
</rss>